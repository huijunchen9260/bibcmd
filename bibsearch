#!/bin/sh

CheckArg () {
    doi_regex='(https://doi.org/)?10\.[0-9]{4}[0-9.]*/[^[:space:]]*'
    if echo "$1" | grep -E -q -o "$doi_regex"; then
	doi="$1"
    elif [ "$(dd if="$1" count=4 bs=1 status=none)" = "%PDF" ]; then
	doi="$(pdfinfo "$1" | grep -E -q -o "$doi_regex")"
	[ -z "$doi" ] && { info="$(pdfinfo "$1" | grep "^Title")"; info="${info#Title: *}"; }
	[ -z "$info" ] && info="$(pdftotext "$1" 2>/dev/null - | head -n 4)"
	[ -z "$info" ] && echo "Cannot identify doi or title from pdf file." && exit 1
    else
	info="$1"
    fi
}

waitclip () { # Usage: waitclip "[CMD]"
    count=1
    while [ -z "$clip" ] && [ $count -le 3600 ]; do
	clip="$(printf '%s' "$1" | ${SHELL:-"/bin/sh"})"
	sleep 1
	count=$(($count+1))
    done
}

DoiGen () {
    if [ -n "$info" ] && command -v xclip; then
	printf '%s' "" | xclip -selection clipboard # Clear clipboard
	xdg-open "https://search.crossref.org/?q=$info" &
	waitclip "xclip -o -selection clipboard"
	doi="$(xclip -o -selection clipboard)"
	doi="${doi##*doi.org/}"
    elif [ -n "$info" ] && command -v xsel; then
	xsel -bc # Clear clipboard
	xdg-open "https://search.crossref.org/?q=$info" &
	waitclip "xsel -o --clipboard"
	doi="$(xsel -o --clipboard)"
	doi="${doi##*doi.org/}"
    else
	echo "Need to install xclip or xsel as dependency"
    fi
}


bibnl () {
    # Add \n at end of file
    nl='
    '
    if [ "$(tail -c 1 "$BIB")" != "$nl" ]; then
	printf '%s\n' "" >> "$BIB"
    fi
}

BibGen () {
    if [ -n "$doi" ]; then
	bibtex="$(curl -s "http://api.crossref.org/works/$doi/transform/application/x-bibtex")"
	if echo "$bibtex" | grep -E "^@[a-z]*{.*," && grep -F "$info" $BIB; then
		printf '%s\n' "$bibtex" >> "$BIB" && echo "Reference added to $BIB" && bibnl
	fi
    fi
}

CheckArg "$1"
if [ -z "$doi" ]; then
    DoiGen
    BibGen
else
    BibGen
fi
